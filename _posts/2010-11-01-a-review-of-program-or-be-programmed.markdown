---
title: A Review of Douglas Rushkoff's "Program or Be Programmed"
tags: society, programming, computers, communication, culture, organizational theory
category: leftlibertarian
---

![Program or Be Programmed Cover](/images/porbp-199x300.jpg "Program or Be Programmed")

I've been saying for years that the future will not begin until the average Joe is able to program his computer. I know, I know - it's a convenient time to mention it. But those of us who make our living as programmers can get tired of being the go-to guys for computer issues. For my part, I find it embarrassing - and not just that I'm treated with deference and respect for nothing other than a minimum comfort with these machines. Rather, I completely understand the frustration of subordinating one's sentience to a stupid configuration ritual or opaque interface construct that by all rights should be conforming to _me_. Yet my generation is supposedly more advanced because we've learned how to click on "How High?" at the "Jump!" prompt. By the same token, my industry isn't exactly falling over itself to make these machines more human.

Upon reading Douglas Rushkoff's [Program or Be Programmed](http://www.orbooks.com/our-books/program/), however, the annoyance has transformed to concern. The vast potential of our networked culture lies not in figuring out what the _computer_ wants as much as figuring out what _we_ want. Because as we tailor our wants to the available choices presented us by software, as we conform our lives and attention spans to the demands of the network, as we learn the new social dynamics of massive connectivity and anonymity, we aren't just adapting to inevitable realities of our times. We are just as assuredly adapting to the strategies of the business interests that have massive capital invested in leveraging the biases of these systems in which we too often passively participate.

As Rushkoff explains, it's not about getting everybody to learn programming. It's about getting people to understand that there is such a thing as programming: that the computer is operating a certain way because it is programmed to, and that just because it's not programmed to do something else doesn't mean it couldn't. There's nothing magical going on, but there's also more potential to the computer or the internet than simply the available software.

What a programmer naturally understands when he uses an interface to a piece of software is that it's just a way to input data. He realizes there are rules behind the scenes making decisions on how to use that data as well as other data. But a non-programmer may mistake the interface for the program, thinking that the look and feel of Amazon is _how you buy books online_, or that the status update and "Like" button is _how you make friends online_. He may not realize that it's just an arbitrary system for conducting this transaction, and that other systems are just as possible. What's more, he may not realize that it's a system that can not only simulate communication and friendship but also seek to monetize that interaction and relationship to a third party's benefit. Or he may feel the system is more important to him than he to it, and try to be available to the system perpetually, to his own detriment.

This is why Rushkoff emphasizes the biases of computers; so that when we are offered new and novel ways of conducting our relationships and transactions, we do not redefine them simply because they cannot be represented in one and zeroes. By understanding these biases, we get a feel for when a computer is serving us and when we are simply kowtowing to the programming. We can decide when it makes sense to send that tweet and when it makes sense to knock on a door instead. Technology is supposed to augment our lives, but we first have to understand the technology. I'd go one further and say that we have to understand our lives as something more than mere "statuses" and "likes".

One interesting way Rushkoff frames this is by making a historical analysis of past technological advances, similar to Lewis Mumford's theories on technics and political economy. He observes that every time a new way of communicating became available, the masses were always one step behind. When writing was invented, it didn't mean everybody became readers; it meant a priest class read to the masses and kept the power of literacy for themselves. The printing press transformed us into readers, but the ability to write for the presses was reserved for the connected by capitalist privilege or royal decree. Now we can write via blogs, email, Twitter, social networking, etc. to our heart's content - but only by putting our words in the text box provided. Those who control where that text box shows up - and where the text entered into it gets squirreled off to, and how it's ultimately used - are still exercising supremacy. Unless we can build our own software, or at least realize we're not fully in control of that text, we're at their mercy.

The most interesting element of Rushkoff's thesis is that this argument does not apply simply to computers and the internet. If we start to suspect that our experience of social networking, online communication, e-commerce, e-banking, and other software-centric activities are not just limited to the websites, programs, and services we use, other systems can be recognized as similar. Perhaps the institution of law is a "platform" of sorts with particular rules and phenomena that are not set in stone but subtly crafted to benefit certain interests over others. Perhaps our economy is "software" in a sense, operating according to the dictates of certain humans to channel our activities into areas profitable to the interests they serve. Our highly institutional society is chock full of systems that operate on us at least as much as we operate on them. And if these systems are like software, then they too can be hacked and modded to serve us rather than us serving it.

"Program or Be Programmed" will not just scare you; it will give you a taste of what a truly computer-literate and participatory society could look like. A world where we all genuinely use technology, not conform to it, bringing about a networked culture (dare I say, a social memory complex?) that can transcend our individuality without obliterating it. That, to me, is the future: as Rushkoff puts it, "the conscious, collective intervention of human beings in their own evolution." We have a genuine opportunity to reshape the world we live in by understanding that it doesn't have to run on the current software. A decentralist, networked, bottom-up, liberating promise of technology is still available to us, but it won't be delivered on a silver platter - and if seems to be, then we just have to learn to read the fine print and/or the source code.