--- 
wordpress_id: 394
title: Open Source Paradigm Shift
wordpress_url: http://blog.6thdensity.net/?p=394
layout: post
---
Tim O'Reilly has published a thought provoking article based on talks he's given called <a href="http://tim.oreilly.com/articles/paradigmshift_0504.html">Open Source Paradigm Shift</a>.  From a software developer's standpoint, it is fascinating.  But more intriguing yet is his contention that open source is a fundamental paradigm shift for society as a whole:
<blockquote>In short, if it is sufficiently robust an innovation to qualify as a new paradigm, the open source story is far from over, and its lessons far from completely understood. Rather than thinking of open source only as a set of software licenses and associated software development practices, we do better to think of it as a field of scientific and economic inquiry, one with many historical precedents, and part of a broader social and economic story.</blockquote>
This is very interesting for me because it provides the final bridge between the actual experience of open source in the computer world and the emerging projections of this process onto other fields like <a title="Kevin Carson: Decentralized Economics" href="http://www.google.com/search?q=site%3Amutualist.blogspot.com+%22open+source%22&start=0&ie=utf-8&oe=utf-8&client=firefox-a&rls=org.mozilla:en-US:official">economics</a>.  <a title="The Mutualist Blog" href="http://mutualist.blogspot.com">Kevin Carson</a> has done a good job of <a title="Mentions of " href="http://www.google.com/search?q=site%3Amutualist.blogspot.com+%22open+source%22&start=0&ie=utf-8&oe=utf-8&client=firefox-a&rls=org.mozilla:en-US:official">referencing open source processes</a> in various fields, such as <a title="Kevin Carson: Open Source Textbooks" href="http://mutualist.blogspot.com/2006/01/open-source-textbooks.html">the textbook racket</a>.  What the software industry provides us with is a first look into what decentralized economic and productive activity really looks like.

While tenuous politically, such a paradigm of human interaction is exciting and pregnant with opportunity - not just for progress, but for understanding of how this paradigm has already contributed to the progress so far.
<blockquote>The Unix software tradition provides a good example.  Unix was developed at Bell Labs, and was shared freely with university software researchers, who contributed many of the utilities and features we take for granted today.  The fact that Unix was provided under a license that later allowed ATT to shut down the party when it decided it wanted to commecialize Unix, leading ultimately to the rise of BSD Unix and Linux as free alternatives, should not blind us to the fact that the early, collaborative development <em>preceded</em> the adoption of an open source licensing model. <strong>Open source licensing began as an attempt to preserve a culture of sharing, and only later led to an expanded awareness of the value of that sharing</strong>.</blockquote>
In another example, O'Reilly explains how much Microsoft has depended on open source:
<blockquote>But an even more compelling story comes from that archetype of proprietary software, Microsoft.  Far too few people know the story of the origin of ASP.NET. As told to me by its creators, Mark  Anders and Scott Guthrie, the two of them wanted to re-engineer Microsoft's ASP product to make it XML-aware.  They were told that doing so would break backwards compatibility, and the decision was made to stick with the old architecture.  But when Anders and Guthrie had a month between projects, they hacked up their vision anyway, just to see where it would go.  Others within Microsoft heard about their work, found it useful, and adopted pieces of it.  Some six or nine months later, they had a call from Bill Gates: "I'd like to see your project."

In short, one of Microsoft's flagship products was born as an internal "code fork", the result of two developers "scratching their own itch", and spread within Microsoft in much the same way as open source projects spread on the open Internet. <strong>It appears that open source is the "natural language" of a networked community</strong>. Given enough developers and a network to connect them, open-source-style development behavior emerges.</blockquote>
If this is indeed true - if what we're rediscovering in the guise of open source is really a natural process of development - then we should not only try to participate in, expand, and promote it.  We should also work to <strong>remove the barriers to this process</strong> - barriers that exist in the form of the state.  In fact, the implications of open source even in the software industry are at their core chiefly political.  What's being rediscovered is the access to creative potential, not any underlying change in the way humans work.

It's not that we don't need regulation, centralization of standards, etc. as a society.  Rather, we can cut out the middleman: we don't need the social fabric to be provided at gunpoint by any ruling class of enlightened, rich thugs.  Perhaps one day people will see government and big business as the same inefficient barrier to the natural order of human society - the same way that Microsoft (or rather the process it represents) is starting to be recognized less as a value adder and more as a value stifler.

Hat tip to <a href="http://www.michaelrichardson.org">Mike Richardson</a>.
